/**
 *
 * This file is part of the https://github.com/BITPlan/org.sidif.triplestore open source project
 *
 * Copyright Â© 2015-2017 BITPlan GmbH https://github.com/BITPlan
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 *  You may obtain a copy of the License at
 *
 *  http:www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Generated By:JJTree&JavaCC: Do not edit this line. SiDIFConstants.java */
package org.sidif.parser.jjtree;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SiDIFConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IS = 6;
  /** RegularExpression Id. */
  int OF = 7;
  /** RegularExpression Id. */
  int HAS = 8;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 9;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 10;
  /** RegularExpression Id. */
  int HEX_LITERAL = 11;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 12;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 13;
  /** RegularExpression Id. */
  int EXPONENT = 14;
  /** RegularExpression Id. */
  int CHARACTER_LITERAL = 15;
  /** RegularExpression Id. */
  int STRING_LITERAL = 16;
  /** RegularExpression Id. */
  int DATETIME_LITERAL = 17;
  /** RegularExpression Id. */
  int DATE_LITERAL = 18;
  /** RegularExpression Id. */
  int TIME_LITERAL = 19;
  /** RegularExpression Id. */
  int TRUE = 20;
  /** RegularExpression Id. */
  int FALSE = 21;
  /** RegularExpression Id. */
  int NULL = 22;
  /** RegularExpression Id. */
  int WHITESPACE = 23;
  /** RegularExpression Id. */
  int URI = 24;
  /** RegularExpression Id. */
  int SCHEME = 25;
  /** RegularExpression Id. */
  int IDENTIFIER = 26;
  /** RegularExpression Id. */
  int LETTER = 27;
  /** RegularExpression Id. */
  int DIGIT = 28;
  /** RegularExpression Id. */
  int UNKNOWN = 29;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "<token of kind 5>",
    "\"is\"",
    "\"of\"",
    "\"has\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<DATETIME_LITERAL>",
    "<DATE_LITERAL>",
    "<TIME_LITERAL>",
    "\"true\"",
    "\"false\"",
    "\"null\"",
    "<WHITESPACE>",
    "<URI>",
    "<SCHEME>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<UNKNOWN>",
  };

}
